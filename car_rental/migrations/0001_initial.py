# Generated by Django 5.2.6 on 2025-10-21 23:26

import cloudinary.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('make', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('year', models.IntegerField()),
                ('default_price', models.DecimalField(decimal_places=2, help_text='Default price used if rent/sale prices not set', max_digits=10)),
                ('description', models.TextField()),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('featured', models.BooleanField(default=False)),
                ('vin', models.CharField(blank=True, help_text='Vehicle Identification Number', max_length=17, null=True, unique=True)),
                ('fuel_efficiency', models.DecimalField(blank=True, decimal_places=1, help_text='MPG or kWh/100km for electric vehicles', max_digits=5, null=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('rented', 'Rented'), ('in_service', 'In Service'), ('sold', 'Sold')], db_index=True, default='available', max_length=20)),
                ('for_rent', models.BooleanField(default=False)),
                ('for_sale', models.BooleanField(default=False)),
                ('rent_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price per day', max_digits=18, null=True)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('car_type', models.CharField(blank=True, choices=[('sedan', 'Sedan'), ('suv', 'SUV'), ('coupe', 'Coupe'), ('convertible', 'Convertible'), ('hatchback', 'Hatchback'), ('truck', 'Truck'), ('van', 'Van'), ('luxury', 'Luxury')], max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('mileage', models.IntegerField(default=0, help_text='Mileage in miles')),
                ('transmission', models.CharField(blank=True, choices=[('automatic', 'Automatic'), ('manual', 'Manual'), ('cvt', 'CVT'), ('semi-automatic', 'Semi-Automatic')], max_length=50, null=True)),
                ('engine_type', models.CharField(blank=True, choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid'), ('plug-in_hybrid', 'Plug-in Hybrid')], max_length=50, null=True)),
                ('seats', models.IntegerField(default=4)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Car',
                'verbose_name_plural': 'Cars',
                'ordering': ['-year', 'make', 'model'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.TextField(blank=True)),
                ('delivery_address', models.TextField(blank=True)),
                ('drivers_license', models.CharField(blank=True, max_length=50)),
                ('license_expiry', models.DateField(blank=True, null=True)),
                ('license_image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='license_image')),
                ('payment_methods', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_account', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('purchase_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('delivery_datetime', models.DateTimeField(blank=True, null=True)),
                ('actual_delivery_datetime', models.DateTimeField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=18)),
                ('taxes', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('fees', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('financed', 'Financed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], db_index=True, default='pending', max_length=20)),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('warranty_terms', models.TextField(blank=True)),
                ('trade_in_value', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('delivery_address', models.TextField(blank=True)),
                ('delivery_notes', models.TextField(blank=True)),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='car_rental.car')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='car_rental.customer')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_sales', to=settings.AUTH_USER_MODEL)),
                ('trade_in', models.ForeignKey(blank=True, help_text='Car traded in for this purchase', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trade_in_for', to='car_rental.purchase')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Purchase',
                'verbose_name_plural': 'Purchases',
                'ordering': ['-purchase_datetime'],
            },
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('rental_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('return_datetime', models.DateTimeField()),
                ('actual_return_datetime', models.DateTimeField(blank=True, null=True)),
                ('pickup_location', models.CharField(blank=True, max_length=200)),
                ('daily_rate', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True)),
                ('late_fee', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], db_index=True, default='active', max_length=20)),
                ('insurance_provider', models.CharField(blank=True, max_length=100)),
                ('insurance_policy', models.CharField(blank=True, max_length=50)),
                ('override_late_fee', models.BooleanField(default=False, help_text='Check to manually set late fee instead of calculating automatically')),
                ('manual_late_fee', models.DecimalField(decimal_places=2, default=0, help_text='Manually set late fee amount', max_digits=18)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rentals', to='car_rental.car')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rentals', to='car_rental.customer')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_rentals', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rental',
                'verbose_name_plural': 'Rentals',
                'ordering': ['-rental_datetime'],
            },
        ),
        migrations.CreateModel(
            name='ServiceBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_type', models.CharField(choices=[('diagnostic', 'Diagnostic Service'), ('repair', 'Repair Service'), ('upgrade', 'Upgrade Service'), ('consultation', 'Consultation Service')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('car_make', models.CharField(max_length=100)),
                ('car_model', models.CharField(max_length=100)),
                ('car_year', models.IntegerField()),
                ('preferred_date', models.DateField()),
                ('description', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('whatsapp_sent', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_bookings', to='car_rental.customer')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Service Booking',
                'verbose_name_plural': 'Service Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(default='Hillz Exquisites', max_length=100)),
                ('tagline', models.CharField(default='Premium Car Rentals & Automotive Services', max_length=200)),
                ('description', models.TextField(default='Experience luxury and performance with our exclusive fleet of premium vehicles. Rent, buy, or service your car with confidence at Hillz Exquisites.')),
                ('address', models.TextField(default='123 Luxury Avenue, Beverly Hills, CA 90210')),
                ('phone', models.CharField(default='+1 (234) 567-890', max_length=20)),
                ('whatsapp_phone', models.CharField(blank=True, default='+1 (234) 567-890', max_length=20)),
                ('email', models.EmailField(default='info@hillzexquisites.com', max_length=254)),
                ('monday_hours', models.CharField(default='9:00 AM - 8:00 PM', max_length=50)),
                ('tuesday_hours', models.CharField(default='9:00 AM - 8:00 PM', max_length=50)),
                ('wednesday_hours', models.CharField(default='9:00 AM - 8:00 PM', max_length=50)),
                ('thursday_hours', models.CharField(default='9:00 AM - 8:00 PM', max_length=50)),
                ('friday_hours', models.CharField(default='9:00 AM - 8:00 PM', max_length=50)),
                ('saturday_hours', models.CharField(default='10:00 AM - 6:00 PM', max_length=50)),
                ('sunday_hours', models.CharField(default='10:00 AM - 6:00 PM', max_length=50)),
                ('instagram_url', models.URLField(blank=True, default='https://instagram.com')),
                ('logo', cloudinary.models.CloudinaryField(max_length=255, verbose_name='logo')),
                ('favicon', cloudinary.models.CloudinaryField(max_length=255, verbose_name='favicon')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Site Information',
                'verbose_name_plural': 'Site Information',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('whatsapp_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('zip_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_picture', cloudinary.models.CloudinaryField(max_length=255, verbose_name='profile_picture')),
                ('bio', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('delivery_address', models.TextField(blank=True)),
                ('drivers_license', models.CharField(blank=True, max_length=50)),
                ('license_expiry', models.DateField(blank=True, null=True)),
                ('license_image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='license_image')),
                ('payment_methods', models.JSONField(blank=True, default=dict)),
                ('role', models.CharField(choices=[('customer', 'Customer'), ('employee', 'Employee'), ('manager', 'Manager'), ('admin', 'Administrator')], default='customer', max_length=20)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('newsletter_subscription', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='CustomerRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_type', models.CharField(choices=[('rental', 'Rental'), ('purchase', 'Purchase'), ('service', 'Service')], max_length=20)),
                ('object_id', models.PositiveIntegerField()),
                ('rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')])),
                ('comment', models.TextField(blank=True)),
                ('would_recommend', models.BooleanField(default=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car_rental.customer')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('customer', 'content_type', 'object_id')},
            },
        ),
    ]
